<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fea.project.dao.baseconfig.ProjectCodeRegMapper">
    <resultMap id="BaseResultMap" type="com.fea.project.model.baseconfig.ProjectCodeRegModel">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="reg_id" jdbcType="BIGINT" property="regId"/>
        <result column="parent_project" jdbcType="VARCHAR" property="parentProject"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del_status" jdbcType="INTEGER" property="delStatus"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, reg_id, parent_project, update_time, del_status
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * 
        from t_project_code_reg
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from t_project_code_reg
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        delete from t_project_code_reg
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" keyProperty="id" parameterType="com.fea.project.model.baseconfig.ProjectCodeRegModel">
        insert into t_project_code_reg (
        <include refid="Base_Column_List"/>
        )
        values (
        #{id,jdbcType=BIGINT},
        #{regId,jdbcType=BIGINT},
        #{parentProject,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP},
        #{delStatus,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertList" parameterType="java.util.List" keyProperty="id">
        insert into t_project_code_reg (
        <include refid="Base_Column_List"/>
        ) values
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id,jdbcType=BIGINT},
            #{item.regId,jdbcType=BIGINT},
            #{item.parentProject,jdbcType=VARCHAR},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.delStatus,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <select id="selectByModel" parameterType="com.fea.project.model.baseconfig.ProjectCodeRegModel"
            resultMap="BaseResultMap">
        select * from t_project_code_reg where 1 = 1
        <if test="id != null">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="regId != null">
            and reg_id = #{regId,jdbcType=BIGINT}
        </if>
        <if test="parentProject != null">
            and parent_project = #{parentProject,jdbcType=VARCHAR}
        </if>
        <if test="updateTime != null">
            and update_time = #{updateTime,jdbcType=TIMESTAMP}
        </if>
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <insert id="insertSelective" keyProperty="id" parameterType="com.fea.project.model.baseconfig.ProjectCodeRegModel">
        insert into t_project_code_reg
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="regId != null">
                reg_id,
            </if>
            <if test="parentProject != null">
                parent_project,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="delStatus != null">
                del_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="regId != null">
                #{regId,jdbcType=BIGINT},
            </if>
            <if test="parentProject != null">
                #{parentProject,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                #{delStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="com.fea.project.model.baseconfig.ProjectCodeRegModel">
        update t_project_code_reg
        <set>
            <if test="regId != null">
                reg_id = #{regId,jdbcType=BIGINT},
            </if>
            <if test="parentProject != null">
                parent_project = #{parentProject,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                del_status = #{delStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <update id="updateById" parameterType="com.fea.project.model.baseconfig.ProjectCodeRegModel">
        update t_project_code_reg
        set reg_id = #{regId,jdbcType=BIGINT},
            parent_project = #{parentProject,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            del_status = #{delStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <select id="selectByRegId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_project_code_reg
        where reg_id = #{regId,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <update id="updateCloseByRegId">
        update t_project_code_reg
        set del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@DELETE.getStatus()}
        where reg_id = #{regId,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

</mapper>