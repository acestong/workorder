<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fea.project.dao.establishproject.role.ProjectEstablishRoleUserMapper">
    <resultMap id="BaseResultMap" type="com.fea.project.model.establishproject.role.ProjectEstablishRoleUserModel">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="create_id" jdbcType="BIGINT" property="createId"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_id" jdbcType="BIGINT" property="updateId"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del_status" jdbcType="INTEGER" property="delStatus"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, role_id, user_id, create_id, create_by, create_time, update_id,
        update_by, update_time, del_status
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * 
        from t_project_establish_role_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from t_project_establish_role_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        delete from t_project_establish_role_user
        where id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" keyProperty="id" parameterType="com.fea.project.model.establishproject.role.ProjectEstablishRoleUserModel">
        insert into t_project_establish_role_user (
        <include refid="Base_Column_List"/>
        )
        values (#{id,jdbcType=BIGINT},
        #{roleId,jdbcType=BIGINT},
        #{userId,jdbcType=BIGINT},
        #{createId,jdbcType=BIGINT},
        #{createBy,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateId,jdbcType=BIGINT},
        #{updateBy,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP},
        #{delStatus,jdbcType=INTEGER}
        )
    </insert>

    <insert id="insertList" parameterType="java.util.List" keyProperty="id">
        insert into t_project_establish_role_user (
        <include refid="Base_Column_List"/>
        ) values
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id,jdbcType=BIGINT},
            #{item.roleId,jdbcType=BIGINT},
            #{item.userId,jdbcType=BIGINT},
            #{item.createId,jdbcType=BIGINT},
            #{item.createBy,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateId,jdbcType=BIGINT},
            #{item.updateBy,jdbcType=VARCHAR},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.delStatus,jdbcType=INTEGER}
            )
        </foreach>
    </insert>

    <select id="selectByModel" parameterType="com.fea.project.model.establishproject.role.ProjectEstablishRoleUserModel"
            resultMap="BaseResultMap">
        select * from t_project_establish_role_user where 1 = 1
        <if test="id != null">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="roleId != null">
            and role_id = #{roleId,jdbcType=BIGINT}
        </if>
        <if test="userId != null">
            and user_id = #{userId,jdbcType=BIGINT}
        </if>
        <if test="createId != null">
            and create_id = #{createId,jdbcType=BIGINT}
        </if>
        <if test="createBy != null">
            and create_by = #{createBy,jdbcType=VARCHAR}
        </if>
        <if test="createTime != null">
            and create_time = #{createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateId != null">
            and update_id = #{updateId,jdbcType=BIGINT}
        </if>
        <if test="updateBy != null">
            and update_by = #{updateBy,jdbcType=VARCHAR}
        </if>
        <if test="updateTime != null">
            and update_time = #{updateTime,jdbcType=TIMESTAMP}
        </if>
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <insert id="insertSelective" keyProperty="id" parameterType="com.fea.project.model.establishproject.role.ProjectEstablishRoleUserModel">
        insert into t_project_establish_role_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="delStatus != null">
                del_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                #{delStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="com.fea.project.model.establishproject.role.ProjectEstablishRoleUserModel">
        update t_project_establish_role_user
        <set>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                del_status = #{delStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <update id="updateById" parameterType="com.fea.project.model.establishproject.role.ProjectEstablishRoleUserModel">
        update t_project_establish_role_user
        set role_id = #{roleId,jdbcType=BIGINT},
            user_id = #{userId,jdbcType=BIGINT},
            create_id = #{createId,jdbcType=BIGINT},
            create_by = #{createBy,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_id = #{updateId,jdbcType=BIGINT},
            update_by = #{updateBy,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            del_status = #{delStatus,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <resultMap id="BaseResultMap_vo" type="com.fea.project.model.establishproject.vo.ProjectEstablishRoleUserVo" extends="BaseResultMap">
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    </resultMap>
    <select id="selectProjectUserRolesByUserIds" resultMap="BaseResultMap_vo">
        select ru.*, role.name as role_name from t_project_establish_role_user ru
        left join t_project_establish_role role on (ru.role_id = role.id)
        where ru.del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
        and user_id in
        <foreach collection="list" separator="," item="item" open="(" close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateByUserIdsAndStatus">
        update t_project_establish_role_user
        <set>
            <if test="model.roleId != null">
                role_id = #{model.roleId,jdbcType=BIGINT},
            </if>
            <if test="model.userId != null">
                user_id = #{model.userId,jdbcType=BIGINT},
            </if>
            <if test="model.createId != null">
                create_id = #{model.createId,jdbcType=BIGINT},
            </if>
            <if test="model.createBy != null">
                create_by = #{model.createBy,jdbcType=VARCHAR},
            </if>
            <if test="model.createTime != null">
                create_time = #{model.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="model.updateId != null">
                update_id = #{model.updateId,jdbcType=BIGINT},
            </if>
            <if test="model.updateBy != null">
                update_by = #{model.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="model.updateTime != null">
                update_time = #{model.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="model.delStatus != null">
                del_status = #{model.delStatus,jdbcType=INTEGER},
            </if>
        </set>
        where del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
        and user_id in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>

    <select id="selectByFilterAndOrderParams" parameterType="com.fea.project.model.BasePageInfo"
            resultMap="BaseResultMap_vo">
        select
        <include refid="Base_Column_List"/>
        from t_project_establish_role_user
        where 1 = 1
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
        <if test="model != null">
            <if test="model.getId() != null">
                and id = #{model.id,jdbcType=BIGINT}
            </if>
            <if test="model.getRoleId() != null">
                and role_id = #{model.roleId,jdbcType=BIGINT}
                and user_id in (select id from t_project_establish_user where id in (
                select user_id from t_project_establish_role_user where role_id = #{model.roleId,jdbcType=BIGINT})
                and `status` != ${@com.fea.project.enums.user.UserStatusEnum@TYPE_DELETE.getValue()})
            </if>
            <if test="model.getUserId() != null">
                and user_id = #{model.userId,jdbcType=BIGINT}
            </if>
            <if test="model.getCreateId() != null">
                and create_id = #{model.createId,jdbcType=BIGINT}
            </if>
            <if test="model.getCreateBy() != null">
                and create_by = #{model.createBy,jdbcType=VARCHAR}
            </if>
            <if test="model.getCreateTime() != null">
                and create_time = #{model.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getUpdateId() != null">
                and update_id = #{model.updateId,jdbcType=BIGINT}
            </if>
            <if test="model.getUpdateBy() != null">
                and update_by = #{model.updateBy,jdbcType=VARCHAR}
            </if>
            <if test="model.getUpdateTime() != null">
                and update_time = #{model.updateTime,jdbcType=TIMESTAMP}
            </if>
        </if>
        <if test="keywords != null">
            and ((create_by like CONCAT('%', #{keywords, jdbcType=VARCHAR}, '%'))
            or (update_by like CONCAT('%', #{keywords, jdbcType=VARCHAR}, '%'))
            )
        </if>
        <if test="sortKey != null">
            order by ${sortKey}
            <if test="sortValue != null">
                ${sortValue}
            </if>
        </if>
        <if test="sortKey == null">
            order by create_time desc
        </if>
    </select>

    <update id="updateModelsByIds">
        update t_project_establish_role_user
        <set>
            <if test="model.roleId != null">
                role_id = #{model.roleId,jdbcType=BIGINT},
            </if>
            <if test="model.userId != null">
                user_id = #{model.userId,jdbcType=BIGINT},
            </if>
            <if test="model.createId != null">
                create_id = #{model.createId,jdbcType=BIGINT},
            </if>
            <if test="model.createBy != null">
                create_by = #{model.createBy,jdbcType=VARCHAR},
            </if>
            <if test="model.createTime != null">
                create_time = #{model.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="model.updateId != null">
                update_id = #{model.updateId,jdbcType=BIGINT},
            </if>
            <if test="model.updateBy != null">
                update_by = #{model.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="model.updateTime != null">
                update_time = #{model.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="model.delStatus != null">
                del_status = #{model.delStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id in
        <foreach collection="list" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <select id="selectByTeamIdAndUserId" resultMap="BaseResultMap">
        select * from t_project_establish_role_user where role_id in (
            select id from t_project_establish_role where project_id in (
            select project_id from t_project_establish_team where id = #{teamId, jdbcType=BIGINT}))
            and user_id = #{userId, jdbcType=BIGINT}
            and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

</mapper>