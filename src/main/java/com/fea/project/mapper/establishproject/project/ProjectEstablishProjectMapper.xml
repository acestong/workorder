<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fea.project.dao.establishproject.project.ProjectEstablishProjectMapper">
    <resultMap id="BaseResultMap" type="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="project_id" jdbcType="BIGINT" property="projectId" />
        <result column="create_id" jdbcType="BIGINT" property="createId" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_id" jdbcType="BIGINT" property="updateId" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="del_status" jdbcType="INTEGER" property="delStatus" />
        <result column="product_develope_flag" jdbcType="INTEGER" property="productDevelopeFlag" />
        <result column="product_name" jdbcType="VARCHAR" property="productName" />
        <result column="product_type" jdbcType="BIGINT" property="productType" />
        <result column="applyer" jdbcType="BIGINT" property="applyer" />
        <result column="establish_leader" jdbcType="BIGINT" property="establishLeader" />
        <result column="reg_id" jdbcType="BIGINT" property="regId" />
        <result column="establish_step" jdbcType="BIGINT" property="establishStep" />
        <result column="start_status" jdbcType="INTEGER" property="startStatus" />
        <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
        <result column="establish_time" jdbcType="TIMESTAMP" property="establishTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, project_id, create_id, create_by, create_time, update_id, update_by, update_time,
        del_status, product_develope_flag, product_name, product_type, applyer, establish_leader, reg_id, establish_step,
        start_status, start_date, establish_time
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * 
        from t_project_establish_project
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from t_project_establish_project
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">
        delete from t_project_establish_project
        where id in 
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" keyProperty="id" parameterType="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel">
        insert into t_project_establish_project (
        <include refid="Base_Column_List" />
        )
        values (#{id,jdbcType=BIGINT},
            #{projectId,jdbcType=BIGINT},
            #{createId,jdbcType=BIGINT},
            #{createBy,jdbcType=VARCHAR}, 
            #{createTime,jdbcType=TIMESTAMP}, 
            #{updateId,jdbcType=BIGINT}, 
            #{updateBy,jdbcType=VARCHAR}, 
            #{updateTime,jdbcType=TIMESTAMP}, 
            #{delStatus,jdbcType=INTEGER}, 
            #{productDevelopeFlag,jdbcType=INTEGER}, 
            #{productName,jdbcType=VARCHAR}, 
            #{productType,jdbcType=BIGINT}, 
            #{applyer,jdbcType=BIGINT},
            #{establishLeader,jdbcType=BIGINT},
            #{regId,jdbcType=BIGINT},
            #{establishStep,jdbcType=BIGINT},
            #{startStatus,jdbcType=INTEGER},
            #{startDate,jdbcType=TIMESTAMP},
            #{establishTime,jdbcType=TIMESTAMP}
            )
    </insert>

    <insert id="insertList" parameterType="java.util.List">
        insert into t_project_establish_project (
        <include refid="Base_Column_List" />
        ) values 
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id,jdbcType=BIGINT},
            #{item.projectId,jdbcType=BIGINT},
                #{item.createId,jdbcType=BIGINT},
                #{item.createBy,jdbcType=VARCHAR}, 
                #{item.createTime,jdbcType=TIMESTAMP}, 
                #{item.updateId,jdbcType=BIGINT}, 
                #{item.updateBy,jdbcType=VARCHAR}, 
                #{item.updateTime,jdbcType=TIMESTAMP}, 
                #{item.delStatus,jdbcType=INTEGER}, 
                #{item.productDevelopeFlag,jdbcType=INTEGER}, 
                #{item.productName,jdbcType=VARCHAR}, 
                #{item.productType,jdbcType=BIGINT}, 
                #{item.applyer,jdbcType=BIGINT},
                #{item.establishLeader,jdbcType=BIGINT},
                #{item.regId,jdbcType=BIGINT},
                #{item.establishStep,jdbcType=BIGINT},
                #{item.startStatus,jdbcType=INTEGER},
                #{item.startDate,jdbcType=TIMESTAMP},
                #{item.establishTime,jdbcType=TIMESTAMP}
                )
        </foreach>
    </insert>

    <select id="selectByModel" parameterType="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel" resultMap="BaseResultMap">
        select * from t_project_establish_project where 1 = 1
        <if test="id != null">
            and id = #{id,jdbcType=BIGINT}
        </if>
        <if test="projectId != null">
            and project_id = #{projectId,jdbcType=BIGINT}
        </if>
        <if test="createId != null">
            and create_id = #{createId,jdbcType=BIGINT}
        </if>
        <if test="createBy != null">
            and create_by = #{createBy,jdbcType=VARCHAR}
        </if>
        <if test="createTime != null">
            and create_time = #{createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateId != null">
            and update_id = #{updateId,jdbcType=BIGINT}
        </if>
        <if test="updateBy != null">
            and update_by = #{updateBy,jdbcType=VARCHAR}
        </if>
        <if test="updateTime != null">
            and update_time = #{updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="productDevelopeFlag != null">
            and product_develope_flag = #{productDevelopeFlag,jdbcType=INTEGER}
        </if>
        <if test="productName != null">
            and product_name = #{productName,jdbcType=VARCHAR}
        </if>
        <if test="productType != null">
            and product_type = #{productType,jdbcType=BIGINT}
        </if>
        <if test="applyer != null">
            and applyer = #{applyer,jdbcType=BIGINT}
        </if>
        <if test="establishLeader != null">
            and establish_leader = #{establishLeader,jdbcType=BIGINT}
        </if>
        <if test="regId != null">
            and reg_id = #{regId,jdbcType=BIGINT}
        </if>
        <if test="establishStep != null">
            and establish_step = #{establishStep,jdbcType=BIGINT}
        </if>
        <if test="startStatus != null">
            and start_status = #{startStatus,jdbcType=INTEGER}
        </if>
        <if test="startDate != null">
            and start_date = #{startDate,jdbcType=TIMESTAMP}
        </if>
        <if test="establishTime != null">
            and establish_time = #{establishTime,jdbcType=TIMESTAMP}
        </if>
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <insert id="insertSelective" keyProperty="id" parameterType="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel">
        insert into t_project_establish_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="delStatus != null">
                del_status,
            </if>
            <if test="productDevelopeFlag != null">
                product_develope_flag,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productType != null">
                product_type,
            </if>
            <if test="applyer != null">
                applyer,
            </if>
            <if test="establishLeader != null">
                establish_leader,
            </if>
            <if test="regId != null">
                reg_id,
            </if>
            <if test="establishStep != null">
                establish_step,
            </if>
            <if test="startStatus != null">
                start_status,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="establishTime != null">
                establish_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=BIGINT},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                #{delStatus,jdbcType=INTEGER},
            </if>
            <if test="productDevelopeFlag != null">
                #{productDevelopeFlag,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productType != null">
                #{productType,jdbcType=BIGINT},
            </if>
            <if test="applyer != null">
                #{applyer,jdbcType=BIGINT},
            </if>
            <if test="establishLeader != null">
                #{establishLeader,jdbcType=BIGINT},
            </if>
            <if test="regId != null">
                #{regId,jdbcType=BIGINT},
            </if>
            <if test="establishStep != null">
                #{establishStep,jdbcType=BIGINT},
            </if>
            <if test="startStatus != null">
                #{startStatus,jdbcType=INTEGER},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="establishTime != null">
                #{establishTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel">
        update t_project_establish_project
        <set>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=BIGINT},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delStatus != null">
                del_status = #{delStatus,jdbcType=INTEGER},
            </if>
            product_develope_flag = #{productDevelopeFlag,jdbcType=INTEGER},
            product_name = #{productName,jdbcType=VARCHAR},
            product_type = #{productType,jdbcType=BIGINT},
            <if test="applyer != null">
                applyer = #{applyer,jdbcType=BIGINT},
            </if>
            <if test="establishLeader != null">
                establish_leader = #{establishLeader,jdbcType=BIGINT},
            </if>
            <if test="regId != null">
                reg_id = #{regId,jdbcType=BIGINT},
            </if>
            <if test="establishStep != null">
                establish_step = #{establishStep,jdbcType=BIGINT},
            </if>
            <if test="startStatus != null">
                start_status = #{startStatus,jdbcType=INTEGER},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=TIMESTAMP},
            </if>
            <if test="establishTime != null">
                establish_time = #{establishTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <update id="updateById" parameterType="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel">
        update t_project_establish_project
        set project_id = #{projectId,jdbcType=BIGINT},
            create_id = #{createId,jdbcType=BIGINT},
            create_by = #{createBy,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_id = #{updateId,jdbcType=BIGINT},
            update_by = #{updateBy,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            del_status = #{delStatus,jdbcType=INTEGER},
            product_develope_flag = #{productDevelopeFlag,jdbcType=INTEGER},
            product_name = #{productName,jdbcType=VARCHAR},
            product_type = #{productType,jdbcType=BIGINT},
            applyer = #{applyer,jdbcType=BIGINT},
            establish_leader = #{establishLeader,jdbcType=BIGINT},
            reg_id = #{regId,jdbcType=BIGINT},
            establish_step = #{establishStep,jdbcType=BIGINT},
            start_status = #{startStatus,jdbcType=INTEGER},
            start_date = #{startDate,jdbcType=TIMESTAMP},
            establish_time = #{establishTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </update>

    <resultMap id="BaseResultMap_Vo" type="com.fea.project.model.establishproject.project.ProjectEstablishProjectModel" extends="BaseResultMap">
        <association property="establishPartners" column="project_id"
                     select="com.fea.project.dao.establishproject.user.ProjectEstablishUserMapper.selectByProjectId"/>
    </resultMap>
    <select id="selectByProjectId" resultMap="BaseResultMap_Vo">
        select <include refid="Base_Column_List" />
        from t_project_establish_project
        where project_id = #{projectId,jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <update id="updateContentByProjectId" parameterType="com.fea.project.model.establishproject.pojo.ProjectEstablishProjectPojo">
        update t_project_project
        set content = #{content,jdbcType=BLOB}
        where id = #{id,jdbcType=BIGINT}
    </update>
    
    <resultMap id="BaseResultMap_projectEstablishVo" type="com.fea.project.model.establishproject.vo.ProjectEstablishVo" >
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="type" jdbcType="BIGINT" property="type"/>
        <result column="priority" jdbcType="BIGINT" property="priority"/>
        <result column="level" jdbcType="BIGINT" property="level"/>
        <result column="risk_level" jdbcType="BIGINT" property="riskLevel"/>
        <result column="resource" jdbcType="INTEGER" property="resource"/>
        <result column="connect_id" jdbcType="BIGINT" property="connectId"/>
        <result column="resource_describe" jdbcType="VARCHAR" property="resourceDescribe"/>
        <result column="apply_depart" jdbcType="BIGINT" property="applyDepart"/>
        <result column="plan_startTime" jdbcType="TIMESTAMP" property="planStartTime"/>
        <result column="plan_endTime" jdbcType="TIMESTAMP" property="planEndTime"/>
        <result column="duration" jdbcType="DECIMAL" property="duration"/>
        <result column="leader" jdbcType="BIGINT" property="leader"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="content" jdbcType="BLOB" property="content"/>
        <result column="create_id" jdbcType="BIGINT" property="createId"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_id" jdbcType="BIGINT" property="updateId"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del_status" jdbcType="INTEGER" property="delStatus"/>
        <result column="reg_id" jdbcType="BIGINT" property="regId"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="real_duration" jdbcType="DECIMAL" property="realDuration"/>
        <result column="real_start_time" jdbcType="TIMESTAMP" property="realStartTime"/>
        <result column="real_end_time" jdbcType="TIMESTAMP" property="realEndTime"/>
        <result column="verify_status" jdbcType="INTEGER" property="verifyStatus"/>
        <result column="establishment" jdbcType="INTEGER" property="establishment"/>
        <result column="project_status" jdbcType="INTEGER" property="projectStatus"/>
        <result column="action_status" jdbcType="INTEGER" property="actionStatus"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
        <result column="applyer" jdbcType="BIGINT" property="applyer"/>
        <result column="establish_leader" jdbcType="BIGINT" property="establishLeader"/>
        <result column="establish_step" jdbcType="BIGINT" property="establishStep" />
        <result column="start_status" jdbcType="INTEGER" property="startStatus" />
        <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
        <result column="establish_time" jdbcType="TIMESTAMP" property="establishTime" />
        <association property="partners" column="id"
                     select="com.fea.project.dao.user.ProjectUserMapper.selectByProjectId"/>
        <association property="establishPartners" column="id"
                     select="com.fea.project.dao.establishproject.user.ProjectEstablishUserMapper.selectByProjectId"/>

    </resultMap>
    <sql id="project_vo_sql">
        tp.id, tp.name, tp.code, tp.type, tp.priority, tp.level, tp.risk_level, tp.resource, tp.connect_id, tp.resource_describe,
        tp.apply_depart,tp.plan_startTime, tp.plan_endTime, tp.duration, tp.leader, tp.remark, tp.content, tp.parent_id,
        tp.real_duration, tp.real_start_time, tp.real_end_time, tp.verify_status, tp.establishment, tp.project_status, tp.action_status, tp.version
    </sql>
    <sql id="establish_vo_sql">
        t2.create_id, t2.create_by, t2.create_time, t2.update_id, t2.update_by, t2.update_time,
        t2.del_status, t2.applyer, t2.establish_leader, t2.reg_id, t2.establish_leader, t2.establish_step,
        t2.start_status, t2.start_date
    </sql>

    <select id="selectByFilterAndOrderParams" parameterType="com.fea.project.model.BasePageInfo" resultMap="BaseResultMap_projectEstablishVo">
        select <include refid="project_vo_sql" />, <include refid="establish_vo_sql" />
        from t_project_project tp
        inner join (
                select <include refid="Base_Column_List" />
                    from t_project_establish_project
                    where 1= 1
                    <if test="model != null">
                        <if test="model.getCreateId() != null">
                            and create_id = #{model.createId,jdbcType=BIGINT}
                        </if>
                        <if test="model.getProductDevelopeFlag() != null">
                            and product_develope_flag = #{model.productDevelopeFlag,jdbcType=INTEGER}
                        </if>
                        <if test="model.getProductName() != null">
                            and product_name = #{model.productName,jdbcType=VARCHAR}
                        </if>
                        <if test="model.getProductType() != null">
                            and product_type = #{model.productType,jdbcType=BIGINT}
                        </if>
                        <if test="model.getApplyer() != null">
                            and applyer = #{model.applyer,jdbcType=BIGINT}
                        </if>
                        <if test="model.getEstablishLeader() != null">
                            and establish_leader = #{model.establishLeader,jdbcType=BIGINT}
                        </if>
                        <if test="model.getRegId() != null">
                            and reg_id = #{model.regId,jdbcType=BIGINT}
                        </if>
                        <if test="model.getEstablishStep() != null">
                            and establish_step = #{model.establishStep,jdbcType=BIGINT}
                        </if>
                        <if test="model.getStartStatus() != null">
                            and start_status = #{startStatus,jdbcType=INTEGER},
                        </if>
                        <if test="model.getStartDate() != null">
                            and start_date = #{startDate,jdbcType=TIMESTAMP},
                        </if>
                        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
                    </if>
        ) t2
        on tp.id = t2.project_id
        where 1 = 1
        <if test="model != null">
            <if test="model.getIds() != null and model.getIds().size() != 0">
                and tp.id in
                <foreach collection="model.getIds()" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="model.getName() != null">
                and tp.name = #{model.name,jdbcType=VARCHAR}
            </if>
            <if test="model.getCode() != null">
                and tp.code = #{model.code,jdbcType=VARCHAR}
            </if>
            <if test="model.getType() != null">
                and tp.`type` = #{model.type,jdbcType=BIGINT}
            </if>
            <if test="model.getPriority() != null">
                and tp.priority = #{model.priority,jdbcType=BIGINT}
            </if>
            <if test="model.getLevel() != null">
                and tp.level = #{model.level,jdbcType=BIGINT}
            </if>
            <if test="model.getRiskLevel() != null">
                and tp.risk_level = #{model.riskLevel,jdbcType=BIGINT}
            </if>
            <if test="model.getResource() != null">
                and tp.resource = #{model.resource,jdbcType=INTEGER}
            </if>
            <if test="model.getConnectId() != null">
                and tp.connect_id = #{model.connectId,jdbcType=BIGINT}
            </if>
            <if test="model.getResourceDescribe() != null">
                and tp.resource_describe = #{model.resourceDescribe,jdbcType=VARCHAR}
            </if>
            <if test="model.getApplyer() != null">
                and tp.applyer = #{model.applyer,jdbcType=BIGINT}
            </if>
            <if test="model.getApplyDepart() != null">
                and tp.apply_depart = #{model.applyDepart,jdbcType=BIGINT}
            </if>
            <if test="model.getPlanStartTime() != null">
                and tp.plan_startTime = #{model.planStartTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getPlanEndTime() != null">
                and tp.plan_endTime = #{model.planEndTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getDuration() != null">
                and tp.duration = #{model.duration,jdbcType=DECIMAL}
            </if>
            <if test="model.getLeader() != null">
                and tp.leader = #{model.leader,jdbcType=BIGINT}
            </if>
            <if test="model.getRemark() != null">
                and tp.remark = #{model.remark,jdbcType=VARCHAR}
            </if>
            <if test="model.getContent() != null">
                and tp.content = #{model.content,jdbcType=BLOB}
            </if>
            <if test="model.getCreateId() != null">
                and tp.create_id = #{model.createId,jdbcType=BIGINT}
            </if>
            <if test="model.getCreateBy() != null">
                and tp.create_by = #{model.createBy,jdbcType=VARCHAR}
            </if>
            <if test="model.getCreateTime() != null">
                and tp.create_time = #{model.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getUpdateId() != null">
                and tp.update_id = #{model.updateId,jdbcType=BIGINT}
            </if>
            <if test="model.getUpdateBy() != null">
                and tp.update_by = #{model.updateBy,jdbcType=VARCHAR}
            </if>
            <if test="model.getUpdateTime() != null">
                and tp.update_time = #{model.updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getRegId() != null">
                and tp.reg_id = #{model.regId,jdbcType=BIGINT}
            </if>
            <if test="model.getParentId() != null">
                and tp.parent_id = #{model.parentId,jdbcType=BIGINT}
            </if>
            <if test="model.getRealDuration() != null">
                and tp.real_duration = #{model.realDuration,jdbcType=DECIMAL}
            </if>
            <if test="model.getRealStartTime() != null">
                and tp.real_start_time = #{model.realStartTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getRealEndTime() != null">
                and tp.real_end_time = #{model.realEndTime,jdbcType=TIMESTAMP}
            </if>
            <if test="model.getVerifyStatus() != null">
                and tp.verify_status = #{model.verifyStatus,jdbcType=INTEGER}
            </if>
            <if test="model.getEstablishment() != null">
                and tp.establishment = #{model.establishment,jdbcType=INTEGER}
            </if>
            <if test="model.getProjectStatus() != null">
                and tp.project_status = #{model.projectStatus,jdbcType=INTEGER}
            </if>
            <if test="model.getActionStatus() != null">
                and tp.action_status = #{model.actionStatus,jdbcType=INTEGER}
            </if>
            <if test="model.getVersion() != null">
                and tp.version = #{model.version,jdbcType=BIGINT}
            </if>
            <if test="model.getTypeList() != null and model.getTypeList().size() != 0">
                and tp.`type` in
                <foreach collection="model.getTypeList()" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="model.getQueryType() != null">
                <if test="model.getQueryType() == 1">
                    and tp.create_id in
                    <foreach collection="model.getUserIds()" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
                <if test="model.getQueryType() == 2">
                    and tp.leader in
                    <foreach collection="model.getUserIds()" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                </if>
                <if test="model.getQueryType() == 3">
                    and tp.id in (
                    select distinct project_id from t_project_concern where user_id in
                    <foreach collection="model.getUserIds()" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                    and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
                    )
                </if>
                <if test="model.getQueryType() == 4">
                    and tp.id in (
                    select distinct project_id from t_project_user where user_id in
                    <foreach collection="model.getUserIds()" item="item" open="(" close=")" separator=",">
                        #{item}
                    </foreach>
                    and project_id is not null
                    and `status` != ${@com.fea.project.enums.user.UserStatusEnum@TYPE_DELETE.getValue()}
                    )
                </if>
            </if>
        </if>
        <if test="keywords != null">
            and ((tp.name like CONCAT('%', #{keywords, jdbcType=VARCHAR}, '%'))
            or (tp.code like CONCAT('%', #{keywords, jdbcType=VARCHAR}, '%'))
            or (tp.create_by like CONCAT('%', #{keywords, jdbcType=VARCHAR}, '%'))
            )
        </if>
        <if test="filters != null">
            <if test="filters.get('type') != null">
                and tp.`type` in
                <foreach collection="filters.get('type')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('priority') != null">
                and tp.priority in
                <foreach collection="filters.get('priority')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('level') != null">
                and tp.level in
                <foreach collection="filters.get('level')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('riskLevel') != null">
                and tp.risk_level in
                <foreach collection="filters.get('riskLevel')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('resource') != null">
                and tp.resource in
                <foreach collection="filters.get('resource')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('levels') != null and filters.get('levels').size() != 0">
                and tp.level in
                <foreach collection="filters.get('levels')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('riskLevels') != null and filters.get('riskLevels').size() != 0">
                and tp.risk_level in
                <foreach collection="filters.get('riskLevels')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="filters.get('actionStatusTypes') != null and filters.get('actionStatusTypes').size() != 0">
                and tp.action_status in
                <foreach collection="filters.get('actionStatusTypes')" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </if>
        <if test="sortKey != null">
            order by tp.${sortKey}
            <if test="sortValue != null">
                ${sortValue}
            </if>
        </if>
        <if test="sortKey == null">
            order by tp.create_time desc
        </if>
    </select>

    <resultMap id="innerBusinessMap" type="com.fea.project.model.establishproject.vo.ProjectInnerProjectBusinessVo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="connect_id" jdbcType="VARCHAR" property="connectId"/>
        <result column="product_develope_flag" jdbcType="BIGINT" property="productDevelopeFlag"/>
        <result column="product_name" jdbcType="VARCHAR" property="productName"/>
        <result column="product_type" jdbcType="BIGINT" property="productType"/>
    </resultMap>
    <select id="selectInnerProjectBussinessByProjectIds" resultMap="innerBusinessMap">
        select t1.id, t1.connect_id, t2.product_develope_flag, t2.product_name, t2.product_type
        from t_project_project t1
            inner join t_project_establish_project t2 on (t1.id = t2.project_id and t1.id in
            <foreach collection="list" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        )
    </select>

    <select id="selectByCreateId" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from t_project_establish_project
        where create_id = #{createId, jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <select id="selectByAttention" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from t_project_establish_project
        where project_id in (
            select project_id from t_project_concern where user_id = #{userId, jdbcType=BIGINT}
            and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
        )
        and del_status =  ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <select id="selectByEstablishLeader" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from t_project_establish_project
        where establish_leader = #{establishLeader, jdbcType=BIGINT}
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <select id="selectByJoiner" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from t_project_establish_project
        where project_id in (
            SELECT distinct project_id from  t_project_establish_user where user_id = #{userId, jdbcType=BIGINT}
            and status != ${@com.fea.project.enums.user.UserStatusEnum@TYPE_DELETE.getValue()}
        )
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>

    <select id="selectByEstablishLeaders" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from t_project_establish_project
        where establish_leader in
        <foreach collection="list" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
        and del_status = ${@com.fea.project.enums.base.DeleteStatusEnum@NOT_DELETE.getStatus()}
    </select>




</mapper>